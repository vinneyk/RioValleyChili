// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace RioValleyChili.Client.Mvc.Areas.Reporting.Controllers
{
    public partial class InventoryShipmentOrderReportingController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InventoryShipmentOrderReportingController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InventoryShipmentOrderReportingController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult WarehouseOrderAcknowledgement()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WarehouseOrderAcknowledgement);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BillOfLading()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BillOfLading);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PackingList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PackingList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PackingListBarcode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PackingListBarcode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PickSheet()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PickSheet);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CertificateOfAnalysis()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CertificateOfAnalysis);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CustomerOrderAcknowledgement()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerOrderAcknowledgement);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PendingOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PendingOrders);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InventoryShipmentOrderReportingController Actions { get { return MVC.Reporting.InventoryShipmentOrderReporting; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Reporting";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "InventoryShipmentOrderReporting";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "InventoryShipmentOrderReporting";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string WarehouseOrderAcknowledgement = "WarehouseOrderAcknowledgement";
            public readonly string BillOfLading = "BillOfLading";
            public readonly string PackingList = "PackingList";
            public readonly string PackingListBarcode = "PackingListBarcode";
            public readonly string PickSheet = "PickSheet";
            public readonly string CertificateOfAnalysis = "CertificateOfAnalysis";
            public readonly string CustomerOrderAcknowledgement = "CustomerOrderAcknowledgement";
            public readonly string PendingOrders = "PendingOrders";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string WarehouseOrderAcknowledgement = "WarehouseOrderAcknowledgement";
            public const string BillOfLading = "BillOfLading";
            public const string PackingList = "PackingList";
            public const string PackingListBarcode = "PackingListBarcode";
            public const string PickSheet = "PickSheet";
            public const string CertificateOfAnalysis = "CertificateOfAnalysis";
            public const string CustomerOrderAcknowledgement = "CustomerOrderAcknowledgement";
            public const string PendingOrders = "PendingOrders";
        }


        static readonly ActionParamsClass_WarehouseOrderAcknowledgement s_params_WarehouseOrderAcknowledgement = new ActionParamsClass_WarehouseOrderAcknowledgement();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_WarehouseOrderAcknowledgement WarehouseOrderAcknowledgementParams { get { return s_params_WarehouseOrderAcknowledgement; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_WarehouseOrderAcknowledgement
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_BillOfLading s_params_BillOfLading = new ActionParamsClass_BillOfLading();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BillOfLading BillOfLadingParams { get { return s_params_BillOfLading; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BillOfLading
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_PackingList s_params_PackingList = new ActionParamsClass_PackingList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PackingList PackingListParams { get { return s_params_PackingList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PackingList
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_PackingListBarcode s_params_PackingListBarcode = new ActionParamsClass_PackingListBarcode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PackingListBarcode PackingListBarcodeParams { get { return s_params_PackingListBarcode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PackingListBarcode
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_PickSheet s_params_PickSheet = new ActionParamsClass_PickSheet();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PickSheet PickSheetParams { get { return s_params_PickSheet; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PickSheet
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_CertificateOfAnalysis s_params_CertificateOfAnalysis = new ActionParamsClass_CertificateOfAnalysis();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CertificateOfAnalysis CertificateOfAnalysisParams { get { return s_params_CertificateOfAnalysis; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CertificateOfAnalysis
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_CustomerOrderAcknowledgement s_params_CustomerOrderAcknowledgement = new ActionParamsClass_CustomerOrderAcknowledgement();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CustomerOrderAcknowledgement CustomerOrderAcknowledgementParams { get { return s_params_CustomerOrderAcknowledgement; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CustomerOrderAcknowledgement
        {
            public readonly string orderKey = "orderKey";
        }
        static readonly ActionParamsClass_PendingOrders s_params_PendingOrders = new ActionParamsClass_PendingOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PendingOrders PendingOrdersParams { get { return s_params_PendingOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PendingOrders
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InventoryShipmentOrderReportingController : RioValleyChili.Client.Mvc.Areas.Reporting.Controllers.InventoryShipmentOrderReportingController
    {
        public T4MVC_InventoryShipmentOrderReportingController() : base(Dummy.Instance) { }

        [NonAction]
        partial void WarehouseOrderAcknowledgementOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult WarehouseOrderAcknowledgement(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WarehouseOrderAcknowledgement);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            WarehouseOrderAcknowledgementOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void BillOfLadingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult BillOfLading(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BillOfLading);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            BillOfLadingOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void PackingListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult PackingList(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PackingList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            PackingListOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void PackingListBarcodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult PackingListBarcode(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PackingListBarcode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            PackingListBarcodeOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void PickSheetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult PickSheet(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PickSheet);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            PickSheetOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void CertificateOfAnalysisOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult CertificateOfAnalysis(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CertificateOfAnalysis);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            CertificateOfAnalysisOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void CustomerOrderAcknowledgementOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult CustomerOrderAcknowledgement(string orderKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerOrderAcknowledgement);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderKey", orderKey);
            CustomerOrderAcknowledgementOverride(callInfo, orderKey);
            return callInfo;
        }

        [NonAction]
        partial void PendingOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime startDate, System.DateTime endDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult PendingOrders(System.DateTime startDate, System.DateTime endDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PendingOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            PendingOrdersOverride(callInfo, startDate, endDate);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
